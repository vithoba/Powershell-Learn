**********************
Windows PowerShell transcript start
Start time: 20190824100738
Username: WIN-482CDBNSSTQ\Administrator
RunAs User: WIN-482CDBNSSTQ\Administrator
Machine: WIN-482CDBNSSTQ (Microsoft Windows NT 10.0.14393.0)
Host Application: C:\Windows\system32\WindowsPowerShell\v1.0\PowerShell_ISE.exe
Process ID: 2636
PSVersion: 5.1.14393.693
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.14393.693
BuildVersion: 10.0.14393.693
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is C:\ScriptHistory\day3.txt
PS C:\Users\Administrator> Get-Command -Noun *date*

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Get-SilWindowsUpdate                               2.0.0.0    SoftwareInventoryLogging
Function        Get-WindowsUpdateLog                               1.0.0.0    WindowsUpdate
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Set-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\Users\Administrator> Get-Command -Noun *date*

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Get-SilWindowsUpdate                               2.0.0.0    SoftwareInventoryLogging
Function        Get-WindowsUpdateLog                               1.0.0.0    WindowsUpdate
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Set-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\Users\Administrator> Get-Command -Noun *date*

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Get-SilWindowsUpdate                               2.0.0.0    SoftwareInventoryLogging
Function        Get-WindowsUpdateLog                               1.0.0.0    WindowsUpdate
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Set-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\Users\Administrator> Get-Command -Noun *date*

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Get-SilWindowsUpdate                               2.0.0.0    SoftwareInventoryLogging
Function        Get-WindowsUpdateLog                               1.0.0.0    WindowsUpdate
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Set-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\Users\Administrator> Get-Date

Saturday, August 24, 2019 10:08:43 AM


PS C:\Users\Administrator> $student=@(
@{name="dinesh"},
@{name="basant"},
@{name="prashant"}
)
PS C:\Users\Administrator> $student

Name                           Value
----                           -----
name                           dinesh
name                           basant
name                           prashant


PS C:\Users\Administrator> $studentdetails=@{name="dinesh" sub=@("science","maths","marathi")}
At line:1 char:33
+ $studentdetails=@{name="dinesh" sub=@("science","maths","marathi")}
+                                 ~~~~~
Unexpected token 'sub=@' in expression or statement.

At line:1 char:32
+ $studentdetails=@{name="dinesh" sub=@("science","maths","marathi")}
+                                ~
The hash literal was incomplete.

At line:1 char:67
+ $studentdetails=@{name="dinesh" sub=@("science","maths","marathi")}
+                                                                   ~
Unexpected token '}' in expression or statement.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : UnexpectedToken

PS C:\Users\Administrator> $studentdetails=@{name="dinesh"
The hash literal was incomplete.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : IncompleteHashLiteral

PS C:\Users\Administrator> $studentdetails=@{name="dinesh"
The hash literal was incomplete.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : IncompleteHashLiteral

PS C:\Users\Administrator> $studentdetails=@{name="dinesh"
 sub=@("science","maths","marathi")}
PS C:\Users\Administrator>  $studentdetails

Name                           Value
----                           -----
name                           dinesh
sub                            {science, maths, marathi}


PS C:\Users\Administrator>  $student.name
dinesh
basant
prashant
PS C:\Users\Administrator>  $studentdetails.name
dinesh
PS C:\Users\Administrator>  $studentdetails.sub
science
maths
marathi
PS C:\Users\Administrator>  $studentdetails|gm


   TypeName: System.Collections.Hashtable

Name              MemberType            Definition
----              ----------            ----------
Add               Method                void Add(System.Object key, System.Object value), void IDictionary.Add(System.Object key, System.Object ...
Clear             Method                void Clear(), void IDictionary.Clear()
Clone             Method                System.Object Clone(), System.Object ICloneable.Clone()
Contains          Method                bool Contains(System.Object key), bool IDictionary.Contains(System.Object key)
ContainsKey       Method                bool ContainsKey(System.Object key)
ContainsValue     Method                bool ContainsValue(System.Object value)
CopyTo            Method                void CopyTo(array array, int arrayIndex), void ICollection.CopyTo(array array, int index)
Equals            Method                bool Equals(System.Object obj)
GetEnumerator     Method                System.Collections.IDictionaryEnumerator GetEnumerator(), System.Collections.IDictionaryEnumerator IDict...
GetHashCode       Method                int GetHashCode()
GetObjectData     Method                void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.Str...
GetType           Method                type GetType()
OnDeserialization Method                void OnDeserialization(System.Object sender), void IDeserializationCallback.OnDeserialization(System.Obj...
Remove            Method                void Remove(System.Object key), void IDictionary.Remove(System.Object key)
ToString          Method                string ToString()
Item              ParameterizedProperty System.Object Item(System.Object key) {get;set;}
Count             Property              int Count {get;}
IsFixedSize       Property              bool IsFixedSize {get;}
IsReadOnly        Property              bool IsReadOnly {get;}
IsSynchronized    Property              bool IsSynchronized {get;}
Keys              Property              System.Collections.ICollection Keys {get;}
SyncRoot          Property              System.Object SyncRoot {get;}
Values            Property              System.Collections.ICollection Values {get;}


PS C:\Users\Administrator>  $studentdetails.Contains("baasant")
False
PS C:\Users\Administrator> $studentdetails

Name                           Value
----                           -----
name                           dinesh
sub                            {science, maths, marathi}


PS C:\Users\Administrator>  $studentdetails.Contains("dinesh")
False
PS C:\Users\Administrator>  $studentdetails.ContainsKey("dinesh")
False
PS C:\Users\Administrator>  $studentdetails.ContainsKey("name")
True
PS C:\Users\Administrator>  $studentdetails.ContainsKey("sub")
True
PS C:\Users\Administrator>  $studentdetails.ContainsKey("dinesh")
False
PS C:\Users\Administrator>  $student.key
PS C:\Users\Administrator>  $student.keys
name
name
name
PS C:\Users\Administrator>  $student.values
dinesh
basant
prashant
PS C:\Users\Administrator>  $studentdetails.ContainsKey("sub")
True
PS C:\Users\Administrator>  $studentdetails.ContainsKey("name")
True
PS C:\Users\Administrator>  $studentdetails.add

OverloadDefinitions
-------------------
void Add(System.Object key, System.Object value)
void IDictionary.Add(System.Object key, System.Object value)



PS C:\Users\Administrator>  $studentdetails.add("history")
Cannot find an overload for "add" and the argument count: "1".
At line:1 char:2
+  $studentdetails.add("history")
+  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest
Cannot find an overload for "add" and the argument count: "1".
At line:1 char:2
+  $studentdetails.add("history")
+  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest

PS C:\Users\Administrator>  $studentdetails.add("history","60")
PS C:\Users\Administrator> $studentdetails

Name                           Value
----                           -----
history                        60
sub                            {science, maths, marathi}
name                           dinesh


PS C:\Users\Administrator>  $studentdetails.add("history","name")
Exception calling "Add" with "2" argument(s): "Item has already been added. Key in dictionary: 'history'  Key being 
added: 'history'"
At line:1 char:2
+  $studentdetails.add("history","name")
+  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : ArgumentException
Exception calling "Add" with "2" argument(s): "Item has already been added. Key in dictionary: 'history'  Key being added: 'history'"
At line:1 char:2
+  $studentdetails.add("history","name")
+  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : ArgumentException

PS C:\Users\Administrator> $studentdetails.add("history","name")
Exception calling "Add" with "2" argument(s): "Item has already been added. Key in dictionary: 'history'  Key being 
added: 'history'"
At line:1 char:1
+ $studentdetails.add("history","name")
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : ArgumentException
Exception calling "Add" with "2" argument(s): "Item has already been added. Key in dictionary: 'history'  Key being added: 'history'"
At line:1 char:1
+ $studentdetails.add("history","name")
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : ArgumentException

PS C:\Users\Administrator> studentdetails.ContainsKey("name")
 $studentdetails1.add("history","name")
studentdetails.ContainsKey : The term 'studentdetails.ContainsKey' is not recognized as the name of a cmdlet, function, 
script file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is 
correct and try again.
At line:1 char:1
+ studentdetails.ContainsKey("name")
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (studentdetails.ContainsKey:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
studentdetails.ContainsKey : The term 'studentdetails.ContainsKey' is not recognized as the name of a cmdlet, function, script file, or operable
program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:1
+ studentdetails.ContainsKey("name")
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (studentdetails.ContainsKey:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

You cannot call a method on a null-valued expression.
At line:2 char:2
+  $studentdetails1.add("history","name")
+  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull
You cannot call a method on a null-valued expression.
At line:2 char:2
+  $studentdetails1.add("history","name")
+  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull

PS C:\Users\Administrator> $studentdetails.add("maths","dd")
PS C:\Users\Administrator> $studentdetails

Name                           Value
----                           -----
history                        60
sub                            {science, maths, marathi}
maths                          dd
name                           dinesh


PS C:\Users\Administrator>   Get-Service | Stop-Process -WhatIf
Stop-Process : Cannot find a process with the name "AJRouter". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AJRouter:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "AJRouter". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AJRouter:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "ALG". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ALG:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "ALG". Verify the process name and call the
cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ALG:String) [Stop-Process], ProcessCommandExcep
   tion
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "AppIDSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppIDSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "AppIDSvc". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppIDSvc:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "Appinfo". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Appinfo:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "Appinfo". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Appinfo:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "AppMgmt". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppMgmt:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "AppMgmt". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppMgmt:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "AppReadiness". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppReadiness:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "AppReadiness". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppReadiness:String) [Stop-Process], ProcessCom
   mandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "AppVClient". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppVClient:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "AppVClient". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppVClient:String) [Stop-Process], ProcessComma
   ndException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "AppXSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppXSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "AppXSvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppXSvc:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "AudioEndpointBuilder". Verify the process name and call the cmdlet 
again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AudioEndpointBuilder:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "AudioEndpointBuilder". Verify the process
name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AudioEndpointBuilder:String) [Stop-Process], Pr
   ocessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "Audiosrv". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Audiosrv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "Audiosrv". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Audiosrv:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "AxInstSV". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AxInstSV:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "AxInstSV". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AxInstSV:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "BFE". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BFE:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "BFE". Verify the process name and call the
cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BFE:String) [Stop-Process], ProcessCommandExcep
   tion
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "BITS". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BITS:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "BITS". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BITS:String) [Stop-Process], ProcessCommandExce
   ption
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "BrokerInfrastructure". Verify the process name and call the cmdlet 
again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BrokerInfrastructure:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "BrokerInfrastructure". Verify the process
name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BrokerInfrastructure:String) [Stop-Process], Pr
   ocessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "Browser". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Browser:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "Browser". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Browser:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "bthserv". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (bthserv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "bthserv". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (bthserv:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "CDPSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CDPSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "CDPSvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CDPSvc:String) [Stop-Process], ProcessCommandEx
   ception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "CDPUserSvc_8da05". Verify the process name and call the cmdlet 
again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CDPUserSvc_8da05:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "CDPUserSvc_8da05". Verify the process name
and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CDPUserSvc_8da05:String) [Stop-Process], Proces
   sCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "CertPropSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CertPropSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "CertPropSvc". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CertPropSvc:String) [Stop-Process], ProcessComm
   andException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "ClipSVC". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ClipSVC:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "ClipSVC". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ClipSVC:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "COMSysApp". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (COMSysApp:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "COMSysApp". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (COMSysApp:String) [Stop-Process], ProcessComman
   dException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "CoreMessagingRegistrar". Verify the process name and call the 
cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CoreMessagingRegistrar:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "CoreMessagingRegistrar". Verify the
process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CoreMessagingRegistrar:String) [Stop-Process],
   ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "CryptSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CryptSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "CryptSvc". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CryptSvc:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "CscService". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CscService:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "CscService". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CscService:String) [Stop-Process], ProcessComma
   ndException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "DcomLaunch". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DcomLaunch:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "DcomLaunch". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DcomLaunch:String) [Stop-Process], ProcessComma
   ndException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "DcpSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DcpSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "DcpSvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DcpSvc:String) [Stop-Process], ProcessCommandEx
   ception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "defragsvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (defragsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "defragsvc". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (defragsvc:String) [Stop-Process], ProcessComman
   dException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "DeviceAssociationService". Verify the process name and call the 
cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DeviceAssociationService:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "DeviceAssociationService". Verify the
process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DeviceAssociationService:String) [Stop-Process]
   , ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "DeviceInstall". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DeviceInstall:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "DeviceInstall". Verify the process name
and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DeviceInstall:String) [Stop-Process], ProcessCo
   mmandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "DevQueryBroker". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DevQueryBroker:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "DevQueryBroker". Verify the process name
and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DevQueryBroker:String) [Stop-Process], ProcessC
   ommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "Dhcp". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Dhcp:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "Dhcp". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Dhcp:String) [Stop-Process], ProcessCommandExce
   ption
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "diagnosticshub.standardcollector.service". Verify the process name 
and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (diagnosticshub.standardcollector.service:String) [Stop-Process], 
ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "diagnosticshub.standardcollector.service".
Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (diagnosticshub.standardcollector.service:String
   ) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "DiagTrack". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DiagTrack:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "DiagTrack". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DiagTrack:String) [Stop-Process], ProcessComman
   dException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "DmEnrollmentSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DmEnrollmentSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "DmEnrollmentSvc". Verify the process name
and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DmEnrollmentSvc:String) [Stop-Process], Process
   CommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "dmwappushservice". Verify the process name and call the cmdlet 
again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dmwappushservice:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "dmwappushservice". Verify the process name
and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dmwappushservice:String) [Stop-Process], Proces
   sCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "Dnscache". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Dnscache:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "Dnscache". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Dnscache:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "dot3svc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dot3svc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "dot3svc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dot3svc:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "DPS". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DPS:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "DPS". Verify the process name and call the
cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DPS:String) [Stop-Process], ProcessCommandExcep
   tion
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "DsmSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DsmSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "DsmSvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DsmSvc:String) [Stop-Process], ProcessCommandEx
   ception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "DsSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DsSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "DsSvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DsSvc:String) [Stop-Process], ProcessCommandExc
   eption
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "Eaphost". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Eaphost:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "Eaphost". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Eaphost:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "EFS". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (EFS:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "EFS". Verify the process name and call the
cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (EFS:String) [Stop-Process], ProcessCommandExcep
   tion
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "embeddedmode". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (embeddedmode:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "embeddedmode". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (embeddedmode:String) [Stop-Process], ProcessCom
   mandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "EntAppSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (EntAppSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "EntAppSvc". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (EntAppSvc:String) [Stop-Process], ProcessComman
   dException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "EventLog". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (EventLog:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "EventLog". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (EventLog:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "EventSystem". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (EventSystem:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "EventSystem". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (EventSystem:String) [Stop-Process], ProcessComm
   andException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "fdPHost". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (fdPHost:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "fdPHost". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (fdPHost:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "FDResPub". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (FDResPub:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "FDResPub". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (FDResPub:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "FontCache". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (FontCache:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "FontCache". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (FontCache:String) [Stop-Process], ProcessComman
   dException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "FrameServer". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (FrameServer:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "FrameServer". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (FrameServer:String) [Stop-Process], ProcessComm
   andException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "GoogleChromeElevationService". Verify the process name and call the 
cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (GoogleChromeElevationService:String) [Stop-Process], 
ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "GoogleChromeElevationService". Verify the
process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (GoogleChromeElevationService:String) [Stop-Proc
   ess], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "gpsvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (gpsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "gpsvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (gpsvc:String) [Stop-Process], ProcessCommandExc
   eption
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "gupdate". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (gupdate:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "gupdate". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (gupdate:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "gupdatem". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (gupdatem:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "gupdatem". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (gupdatem:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "hidserv". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (hidserv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "hidserv". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (hidserv:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "HvHost". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (HvHost:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "HvHost". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (HvHost:String) [Stop-Process], ProcessCommandEx
   ception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "icssvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (icssvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "icssvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (icssvc:String) [Stop-Process], ProcessCommandEx
   ception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "IKEEXT". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (IKEEXT:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "IKEEXT". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (IKEEXT:String) [Stop-Process], ProcessCommandEx
   ception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "iphlpsvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (iphlpsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "iphlpsvc". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (iphlpsvc:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "KeyIso". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (KeyIso:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "KeyIso". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (KeyIso:String) [Stop-Process], ProcessCommandEx
   ception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "KPSSVC". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (KPSSVC:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "KPSSVC". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (KPSSVC:String) [Stop-Process], ProcessCommandEx
   ception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "KtmRm". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (KtmRm:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "KtmRm". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (KtmRm:String) [Stop-Process], ProcessCommandExc
   eption
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "LanmanServer". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (LanmanServer:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "LanmanServer". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (LanmanServer:String) [Stop-Process], ProcessCom
   mandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "LanmanWorkstation". Verify the process name and call the cmdlet 
again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (LanmanWorkstation:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "LanmanWorkstation". Verify the process
name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (LanmanWorkstation:String) [Stop-Process], Proce
   ssCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "lfsvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lfsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "lfsvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lfsvc:String) [Stop-Process], ProcessCommandExc
   eption
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "LicenseManager". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (LicenseManager:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "LicenseManager". Verify the process name
and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (LicenseManager:String) [Stop-Process], ProcessC
   ommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "lltdsvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lltdsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "lltdsvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lltdsvc:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "lmhosts". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lmhosts:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "lmhosts". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lmhosts:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "LSM". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (LSM:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "LSM". Verify the process name and call the
cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (LSM:String) [Stop-Process], ProcessCommandExcep
   tion
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "MapsBroker". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MapsBroker:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "MapsBroker". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MapsBroker:String) [Stop-Process], ProcessComma
   ndException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "MpsSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MpsSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "MpsSvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MpsSvc:String) [Stop-Process], ProcessCommandEx
   ception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

What if: Performing the operation "Stop-Process" on target "msdtc (3048)".
Stop-Process : Cannot find a process with the name "MSiSCSI". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MSiSCSI:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "MSiSCSI". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MSiSCSI:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "msiserver". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (msiserver:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "msiserver". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (msiserver:String) [Stop-Process], ProcessComman
   dException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "NcaSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NcaSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "NcaSvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NcaSvc:String) [Stop-Process], ProcessCommandEx
   ception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "NcbService". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NcbService:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "NcbService". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NcbService:String) [Stop-Process], ProcessComma
   ndException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "Netlogon". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Netlogon:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "Netlogon". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Netlogon:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "Netman". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Netman:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "Netman". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Netman:String) [Stop-Process], ProcessCommandEx
   ception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "netprofm". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (netprofm:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "netprofm". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (netprofm:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "NetSetupSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NetSetupSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "NetSetupSvc". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NetSetupSvc:String) [Stop-Process], ProcessComm
   andException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "NetTcpPortSharing". Verify the process name and call the cmdlet 
again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NetTcpPortSharing:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "NetTcpPortSharing". Verify the process
name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NetTcpPortSharing:String) [Stop-Process], Proce
   ssCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "NgcCtnrSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NgcCtnrSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "NgcCtnrSvc". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NgcCtnrSvc:String) [Stop-Process], ProcessComma
   ndException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "NgcSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NgcSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "NgcSvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NgcSvc:String) [Stop-Process], ProcessCommandEx
   ception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "NlaSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NlaSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "NlaSvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NlaSvc:String) [Stop-Process], ProcessCommandEx
   ception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "nsi". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (nsi:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "nsi". Verify the process name and call the
cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (nsi:String) [Stop-Process], ProcessCommandExcep
   tion
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "OneSyncSvc_8da05". Verify the process name and call the cmdlet 
again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (OneSyncSvc_8da05:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "OneSyncSvc_8da05". Verify the process name
and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (OneSyncSvc_8da05:String) [Stop-Process], Proces
   sCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "PcaSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PcaSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "PcaSvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PcaSvc:String) [Stop-Process], ProcessCommandEx
   ception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "PerfHost". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PerfHost:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "PerfHost". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PerfHost:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "PhoneSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PhoneSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "PhoneSvc". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PhoneSvc:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "PimIndexMaintenanceSvc_8da05". Verify the process name and call the 
cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PimIndexMaintenanceSvc_8da05:String) [Stop-Process], 
ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "PimIndexMaintenanceSvc_8da05". Verify the
process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PimIndexMaintenanceSvc_8da05:String) [Stop-Proc
   ess], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "pla". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (pla:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "pla". Verify the process name and call the
cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (pla:String) [Stop-Process], ProcessCommandExcep
   tion
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "PlugPlay". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PlugPlay:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "PlugPlay". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PlugPlay:String) [Stop-Process], ProcessCommand
   Exception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "PolicyAgent". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PolicyAgent:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "PolicyAgent". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PolicyAgent:String) [Stop-Process], ProcessComm
   andException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "Power". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Power:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "Power". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Power:String) [Stop-Process], ProcessCommandExc
   eption
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "PrintNotify". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PrintNotify:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "PrintNotify". Verify the process name and
call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PrintNotify:String) [Stop-Process], ProcessComm
   andException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "ProfSvc". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ProfSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "ProfSvc". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ProfSvc:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "QWAVE". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (QWAVE:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "QWAVE". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (QWAVE:String) [Stop-Process], ProcessCommandExc
   eption
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "RasAuto". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RasAuto:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "RasAuto". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RasAuto:String) [Stop-Process], ProcessCommandE
   xception
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopPro
   cessCommand

Stop-Process : Cannot find a process with the name "RasMan". Verify the process name and call the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RasMan:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
Stop-Process : Cannot find a process with the name "RasMan". Verify the process name and call
the cmdlet again.
At line:1 char:17
+   Get-Service | Stop-Process -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RasMan:String) [Stop-Process], ProcessCommandEx
   ception
>> TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS C:\Users\Administrator>   Get-Process | Stop-Service -WhatIf
Stop-Service : Cannot find any service with service name 'AnyDesk'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AnyDesk:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'AnyDesk'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AnyDesk:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'AnyDesk'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AnyDesk:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'AnyDesk'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AnyDesk:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'AnyDesk'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AnyDesk:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'AnyDesk'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AnyDesk:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'ApplicationFrameHost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ApplicationFrameHost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'ApplicationFrameHost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ApplicationFrameHost:String) [Stop-Service], Serv
   iceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'csrss'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (csrss:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'csrss'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (csrss:String) [Stop-Service], ServiceCommandExcep
   tion
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'csrss'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (csrss:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'csrss'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (csrss:String) [Stop-Service], ServiceCommandExcep
   tion
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'dllhost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dllhost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'dllhost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dllhost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'dwm'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dwm:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'dwm'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dwm:String) [Stop-Service], ServiceCommandExcepti
   on
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'explorer'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (explorer:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'explorer'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (explorer:String) [Stop-Service], ServiceCommandEx
   ception
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'GoogleCrashHandler'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (GoogleCrashHandler:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'GoogleCrashHandler'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (GoogleCrashHandler:String) [Stop-Service], Servic
   eCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'GoogleCrashHandler64'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (GoogleCrashHandler64:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'GoogleCrashHandler64'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (GoogleCrashHandler64:String) [Stop-Service], Serv
   iceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'Idle'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Idle:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'Idle'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Idle:String) [Stop-Service], ServiceCommandExcept
   ion
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'lsass'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lsass:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'lsass'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lsass:String) [Stop-Service], ServiceCommandExcep
   tion
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'ManagementAgentHost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ManagementAgentHost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'ManagementAgentHost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ManagementAgentHost:String) [Stop-Service], Servi
   ceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

What if: Performing the operation "Stop-Service" on target "Distributed Transaction Coordinator (msdtc)".
Stop-Service : Cannot find any service with service name 'MsMpEng'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MsMpEng:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'MsMpEng'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MsMpEng:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'powershell_ise'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (powershell_ise:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'powershell_ise'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (powershell_ise:String) [Stop-Service], ServiceCom
   mandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'RuntimeBroker'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RuntimeBroker:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'RuntimeBroker'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RuntimeBroker:String) [Stop-Service], ServiceComm
   andException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'SearchUI'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SearchUI:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'SearchUI'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SearchUI:String) [Stop-Service], ServiceCommandEx
   ception
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'services'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (services:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'services'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (services:String) [Stop-Service], ServiceCommandEx
   ception
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'ShellExperienceHost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ShellExperienceHost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'ShellExperienceHost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ShellExperienceHost:String) [Stop-Service], Servi
   ceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'sihost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (sihost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'sihost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (sihost:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'smss'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (smss:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'smss'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (smss:String) [Stop-Service], ServiceCommandExcept
   ion
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'spoolsv'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (spoolsv:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'spoolsv'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (spoolsv:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'System'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (System:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'System'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (System:String) [Stop-Service], ServiceCommandExce
   ption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'taskhostw'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (taskhostw:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'taskhostw'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (taskhostw:String) [Stop-Service], ServiceCommandE
   xception
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

What if: Performing the operation "Stop-Service" on target "VMware Alias Manager and Ticket Service (VGAuthService)".
Stop-Service : Cannot find any service with service name 'vmacthlp'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmacthlp:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'vmacthlp'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmacthlp:String) [Stop-Service], ServiceCommandEx
   ception
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'vmtoolsd'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmtoolsd:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'vmtoolsd'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmtoolsd:String) [Stop-Service], ServiceCommandEx
   ception
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'vmtoolsd'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmtoolsd:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'vmtoolsd'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmtoolsd:String) [Stop-Service], ServiceCommandEx
   ception
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'wininit'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (wininit:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'wininit'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (wininit:String) [Stop-Service], ServiceCommandExc
   eption
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

Stop-Service : Cannot find any service with service name 'winlogon'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (winlogon:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'winlogon'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (winlogon:String) [Stop-Service], ServiceCommandEx
   ception
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

What if: Performing the operation "Stop-Service" on target "Windows Licensing Monitoring Service (wlms)".
Stop-Service : Cannot find any service with service name 'WmiPrvSE'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (WmiPrvSE:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'WmiPrvSE'.
At line:1 char:17
+   Get-Process | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (WmiPrvSE:String) [Stop-Service], ServiceCommandEx
   ception
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServi
   ceCommand

PS C:\Users\Administrator>  get-help Get-Process -ShowWindow
PS C:\Users\Administrator> get-help Get-Process -ShowWindow
PS C:\Users\Administrator> Get-ChildItem | gm


   TypeName: System.IO.DirectoryInfo

Name                      MemberType     Definition
----                      ----------     ----------
LinkType                  CodeProperty   System.String LinkType{get=GetLinkType;}
Mode                      CodeProperty   System.String Mode{get=Mode;}
Target                    CodeProperty   System.Collections.Generic.IEnumerable`1[[System.Stri...
Create                    Method         void Create(), void Create(System.Security.AccessCont...
CreateObjRef              Method         System.Runtime.Remoting.ObjRef CreateObjRef(type requ...
CreateSubdirectory        Method         System.IO.DirectoryInfo CreateSubdirectory(string pat...
Delete                    Method         void Delete(), void Delete(bool recursive)
EnumerateDirectories      Method         System.Collections.Generic.IEnumerable[System.IO.Dire...
EnumerateFiles            Method         System.Collections.Generic.IEnumerable[System.IO.File...
EnumerateFileSystemInfos  Method         System.Collections.Generic.IEnumerable[System.IO.File...
Equals                    Method         bool Equals(System.Object obj)
GetAccessControl          Method         System.Security.AccessControl.DirectorySecurity GetAc...
GetDirectories            Method         System.IO.DirectoryInfo[] GetDirectories(), System.IO...
GetFiles                  Method         System.IO.FileInfo[] GetFiles(string searchPattern), ...
GetFileSystemInfos        Method         System.IO.FileSystemInfo[] GetFileSystemInfos(string ...
GetHashCode               Method         int GetHashCode()
GetLifetimeService        Method         System.Object GetLifetimeService()
GetObjectData             Method         void GetObjectData(System.Runtime.Serialization.Seria...
GetType                   Method         type GetType()
InitializeLifetimeService Method         System.Object InitializeLifetimeService()
MoveTo                    Method         void MoveTo(string destDirName)
Refresh                   Method         void Refresh()
SetAccessControl          Method         void SetAccessControl(System.Security.AccessControl.D...
ToString                  Method         string ToString()
PSChildName               NoteProperty   string PSChildName=Contacts
PSDrive                   NoteProperty   PSDriveInfo PSDrive=C
PSIsContainer             NoteProperty   bool PSIsContainer=True
PSParentPath              NoteProperty   string PSParentPath=Microsoft.PowerShell.Core\FileSys...
PSPath                    NoteProperty   string PSPath=Microsoft.PowerShell.Core\FileSystem::C...
PSProvider                NoteProperty   ProviderInfo PSProvider=Microsoft.PowerShell.Core\Fil...
Attributes                Property       System.IO.FileAttributes Attributes {get;set;}
CreationTime              Property       datetime CreationTime {get;set;}
CreationTimeUtc           Property       datetime CreationTimeUtc {get;set;}
Exists                    Property       bool Exists {get;}
Extension                 Property       string Extension {get;}
FullName                  Property       string FullName {get;}
LastAccessTime            Property       datetime LastAccessTime {get;set;}
LastAccessTimeUtc         Property       datetime LastAccessTimeUtc {get;set;}
LastWriteTime             Property       datetime LastWriteTime {get;set;}
LastWriteTimeUtc          Property       datetime LastWriteTimeUtc {get;set;}
Name                      Property       string Name {get;}
Parent                    Property       System.IO.DirectoryInfo Parent {get;}
Root                      Property       System.IO.DirectoryInfo Root {get;}
BaseName                  ScriptProperty System.Object BaseName {get=$this.Name;}


PS C:\Users\Administrator> get-help Get-Process -ShowWindow
PS C:\Users\Administrator> get-help stop-Process -ShowWindow
PS C:\Users\Administrator> get-help stop-Process -ShowWindow
PS C:\Users\Administrator> Get-Service

Status   Name               DisplayName
------   ----               -----------
Stopped  AJRouter           AllJoyn Router Service
Stopped  ALG                Application Layer Gateway Service
Stopped  AppIDSvc           Application Identity
Running  Appinfo            Application Information
Stopped  AppMgmt            Application Management
Stopped  AppReadiness       App Readiness
Stopped  AppVClient         Microsoft App-V Client
Stopped  AppXSvc            AppX Deployment Service (AppXSVC)
Stopped  AudioEndpointBu... Windows Audio Endpoint Builder
Stopped  Audiosrv           Windows Audio
Stopped  AxInstSV           ActiveX Installer (AxInstSV)
Running  BFE                Base Filtering Engine
Stopped  BITS               Background Intelligent Transfer Ser...
Running  BrokerInfrastru... Background Tasks Infrastructure Ser...
Stopped  Browser            Computer Browser
Stopped  bthserv            Bluetooth Support Service
Running  CDPSvc             Connected Devices Platform Service
Running  CDPUserSvc_8da05   CDPUserSvc_8da05
Running  CertPropSvc        Certificate Propagation
Stopped  ClipSVC            Client License Service (ClipSVC)
Running  COMSysApp          COM+ System Application
Running  CoreMessagingRe... CoreMessaging
Running  CryptSvc           Cryptographic Services
Stopped  CscService         Offline Files
Running  DcomLaunch         DCOM Server Process Launcher
Stopped  DcpSvc             DataCollectionPublishingService
Stopped  defragsvc          Optimize drives
Stopped  DeviceAssociati... Device Association Service
Stopped  DeviceInstall      Device Install Service
Stopped  DevQueryBroker     DevQuery Background Discovery Broker
Running  Dhcp               DHCP Client
Stopped  diagnosticshub.... Microsoft (R) Diagnostics Hub Stand...
Running  DiagTrack          Connected User Experiences and Tele...
Stopped  DmEnrollmentSvc    Device Management Enrollment Service
Stopped  dmwappushservice   dmwappushsvc
Running  Dnscache           DNS Client
Stopped  dot3svc            Wired AutoConfig
Running  DPS                Diagnostic Policy Service
Stopped  DsmSvc             Device Setup Manager
Stopped  DsSvc              Data Sharing Service
Stopped  Eaphost            Extensible Authentication Protocol
Stopped  EFS                Encrypting File System (EFS)
Stopped  embeddedmode       Embedded Mode
Stopped  EntAppSvc          Enterprise App Management Service
Running  EventLog           Windows Event Log
Running  EventSystem        COM+ Event System
Stopped  fdPHost            Function Discovery Provider Host
Stopped  FDResPub           Function Discovery Resource Publica...
Running  FontCache          Windows Font Cache Service
Stopped  FrameServer        Windows Camera Frame Server
Stopped  GoogleChromeEle... Google Chrome Elevation Service
Running  gpsvc              Group Policy Client
Stopped  gupdate            Google Update Service (gupdate)
Stopped  gupdatem           Google Update Service (gupdatem)
Stopped  hidserv            Human Interface Device Service
Stopped  HvHost             HV Host Service
Stopped  icssvc             Windows Mobile Hotspot Service
Running  IKEEXT             IKE and AuthIP IPsec Keying Modules
Running  iphlpsvc           IP Helper
Running  KeyIso             CNG Key Isolation
Stopped  KPSSVC             KDC Proxy Server service (KPS)
Stopped  KtmRm              KtmRm for Distributed Transaction C...
Running  LanmanServer       Server
Running  LanmanWorkstation  Workstation
Running  lfsvc              Geolocation Service
Running  LicenseManager     Windows License Manager Service
Stopped  lltdsvc            Link-Layer Topology Discovery Mapper
Running  lmhosts            TCP/IP NetBIOS Helper
Running  LSM                Local Session Manager
Stopped  MapsBroker         Downloaded Maps Manager
Running  MpsSvc             Windows Firewall
Running  MSDTC              Distributed Transaction Coordinator
Stopped  MSiSCSI            Microsoft iSCSI Initiator Service
Stopped  msiserver          Windows Installer
Stopped  NcaSvc             Network Connectivity Assistant
Running  NcbService         Network Connection Broker
Stopped  Netlogon           Netlogon
Stopped  Netman             Network Connections
Running  netprofm           Network List Service
Stopped  NetSetupSvc        Network Setup Service
Stopped  NetTcpPortSharing  Net.Tcp Port Sharing Service
Stopped  NgcCtnrSvc         Microsoft Passport Container
Stopped  NgcSvc             Microsoft Passport
Running  NlaSvc             Network Location Awareness
Running  nsi                Network Store Interface Service
Running  OneSyncSvc_8da05   Sync Host_8da05
Running  PcaSvc             Program Compatibility Assistant Ser...
Stopped  PerfHost           Performance Counter DLL Host
Stopped  PhoneSvc           Phone Service
Stopped  PimIndexMainten... Contact Data_8da05
Stopped  pla                Performance Logs & Alerts
Running  PlugPlay           Plug and Play
Running  PolicyAgent        IPsec Policy Agent
Running  Power              Power
Stopped  PrintNotify        Printer Extensions and Notifications
Running  ProfSvc            User Profile Service
Stopped  QWAVE              Quality Windows Audio Video Experience
Stopped  RasAuto            Remote Access Auto Connection Manager
Stopped  RasMan             Remote Access Connection Manager
Stopped  RemoteAccess       Routing and Remote Access
Stopped  RemoteRegistry     Remote Registry
Stopped  RmSvc              Radio Management Service
Running  RpcEptMapper       RPC Endpoint Mapper
Stopped  RpcLocator         Remote Procedure Call (RPC) Locator
Running  RpcSs              Remote Procedure Call (RPC)
Stopped  RSoPProv           Resultant Set of Policy Provider
Stopped  sacsvr             Special Administration Console Helper
Running  SamSs              Security Accounts Manager
Stopped  SCardSvr           Smart Card
Stopped  ScDeviceEnum       Smart Card Device Enumeration Service
Running  Schedule           Task Scheduler
Stopped  SCPolicySvc        Smart Card Removal Policy
Running  seclogon           Secondary Logon
Running  SENS               System Event Notification Service
Stopped  SensorDataService  Sensor Data Service
Stopped  SensorService      Sensor Service
Stopped  SensrSvc           Sensor Monitoring Service
Running  SessionEnv         Remote Desktop Configuration
Stopped  SharedAccess       Internet Connection Sharing (ICS)
Running  ShellHWDetection   Shell Hardware Detection
Stopped  smphost            Microsoft Storage Spaces SMP
Stopped  SNMPTRAP           SNMP Trap
Running  Spooler            Print Spooler
Stopped  sppsvc             Software Protection
Running  SSDPSRV            SSDP Discovery
Stopped  SstpSvc            Secure Socket Tunneling Protocol Se...
Running  StateRepository    State Repository Service
Stopped  stisvc             Windows Image Acquisition (WIA)
Running  StorSvc            Storage Service
Stopped  svsvc              Spot Verifier
Stopped  swprv              Microsoft Software Shadow Copy Prov...
Stopped  SysMain            Superfetch
Running  SystemEventsBroker System Events Broker
Stopped  TabletInputService Touch Keyboard and Handwriting Pane...
Stopped  TapiSrv            Telephony
Running  TermService        Remote Desktop Services
Running  Themes             Themes
Stopped  TieringEngineSe... Storage Tiers Management
Running  tiledatamodelsvc   Tile Data model server
Running  TimeBrokerSvc      Time Broker
Stopped  TPAutoConnSvc      TP AutoConnect Service
Stopped  TPVCGateway        TP VC Gateway Service
Running  TrkWks             Distributed Link Tracking Client
Stopped  TrustedInstaller   Windows Modules Installer
Stopped  tzautoupdate       Auto Time Zone Updater
Running  UALSVC             User Access Logging Service
Stopped  UevAgentService    User Experience Virtualization Service
Stopped  UI0Detect          Interactive Services Detection
Running  UmRdpService       Remote Desktop Services UserMode Po...
Stopped  UnistoreSvc_8da05  User Data Storage_8da05
Stopped  upnphost           UPnP Device Host
Stopped  UserDataSvc_8da05  User Data Access_8da05
Running  UserManager        User Manager
Stopped  UsoSvc             Update Orchestrator Service for Win...
Running  VaultSvc           Credential Manager
Stopped  vds                Virtual Disk
Running  VGAuthService      VMware Alias Manager and Ticket Ser...
Stopped  vmicguestinterface Hyper-V Guest Service Interface
Stopped  vmicheartbeat      Hyper-V Heartbeat Service
Stopped  vmickvpexchange    Hyper-V Data Exchange Service
Stopped  vmicrdv            Hyper-V Remote Desktop Virtualizati...
Stopped  vmicshutdown       Hyper-V Guest Shutdown Service
Stopped  vmictimesync       Hyper-V Time Synchronization Service
Stopped  vmicvmsession      Hyper-V PowerShell Direct Service
Stopped  vmicvss            Hyper-V Volume Shadow Copy Requestor
Running  VMTools            VMware Tools
Stopped  vmvss              VMware Snapshot Provider
Running  VMware Physical... VMware Physical Disk Helper Service
Stopped  VMwareCAFCommAm... VMware CAF AMQP Communication Service
Running  VMwareCAFManage... VMware CAF Management Agent Service
Stopped  VSS                Volume Shadow Copy
Running  W32Time            Windows Time
Stopped  WalletService      WalletService
Stopped  WbioSrvc           Windows Biometric Service
Running  Wcmsvc             Windows Connection Manager
Stopped  WdiServiceHost     Diagnostic Service Host
Stopped  WdiSystemHost      Diagnostic System Host
Stopped  WdNisSvc           Windows Defender Network Inspection...
Stopped  Wecsvc             Windows Event Collector
Stopped  WEPHOSTSVC         Windows Encryption Provider Host Se...
Stopped  wercplsupport      Problem Reports and Solutions Contr...
Stopped  WerSvc             Windows Error Reporting Service
Stopped  WiaRpc             Still Image Acquisition Events
Running  WinDefend          Windows Defender Service
Running  WinHttpAutoProx... WinHTTP Web Proxy Auto-Discovery Se...
Running  Winmgmt            Windows Management Instrumentation
Running  WinRM              Windows Remote Management (WS-Manag...
Stopped  wisvc              Windows Insider Service
Stopped  wlidsvc            Microsoft Account Sign-in Assistant
Running  WLMS               Windows Licensing Monitoring Service
Stopped  wmiApSrv           WMI Performance Adapter
Stopped  WPDBusEnum         Portable Device Enumerator Service
Running  WpnService         Windows Push Notifications System S...
Stopped  WpnUserService_... Windows Push Notifications User Ser...
Stopped  WSearch            Windows Search
Stopped  wuauserv           Windows Update
Running  wudfsvc            Windows Driver Foundation - User-mo...
Stopped  XblAuthManager     Xbox Live Auth Manager
Stopped  XblGameSave        Xbox Live Game Save


PS C:\Users\Administrator>  Get-Service C:\ScriptHistory\service.csv
Get-Service : Cannot find any service with service name 'C:\ScriptHistory\service.csv'.
At line:1 char:2
+  Get-Service C:\ScriptHistory\service.csv
+  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (C:\ScriptHistory\service.csv:String) [Get-Service], 
ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.GetServiceCommand
Get-Service : Cannot find any service with service name 'C:\ScriptHistory\service.csv'.
At line:1 char:2
+  Get-Service C:\ScriptHistory\service.csv
+  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (C:\ScriptHistory\service.csv:String) [Get-Service
   ], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.GetServic
   eCommand

PS C:\Users\Administrator> $Aduser=import-csv C:\ScriptHistory\ADusers.csv
PS C:\Users\Administrator> $Exusers=import-csv C:\ScriptHistory\Exchange.csv
PS C:\Users\Administrator> $Aduser

Name        SamAccount Mail
----        ---------- ----
Dinesh Ptil Dineshp    dinesh.patil@ntms.com
Ram Patil   Ramp       ram.patil@ntms.com
Shyam Patil Shyamp     shyam.patil@ntms.com


PS C:\Users\Administrator> $Exusers

Email                 TotalSizeIteam
-----                 --------------
dinesh.patil@ntms.com 300kb
ram.patil@ntms.com    400kb
shyamm.patil@ntms.com 500kb


PS C:\Users\Administrator> $Adusers.mail -eq $Exusers.email
False
PS C:\Users\Administrator> $Aduser.mail -eq $Exusers.email
PS C:\Users\Administrator> foreach($ADusers in $ADuser )
    {
    if($Aduser.mail -eq $Exusers.email)
    {$Aduser.mail,$Exusers.totalsizeiteam | Export-csv C:\Demo\exchange.csv
    }

    else
    {$Aduser.mail | export-csv C:\Demo\nomatch.csv}
    
    
    
    
    }
PS C:\Users\Administrator> $Aduser

Name        SamAccount Mail
----        ---------- ----
Dinesh Ptil Dineshp    dinesh.patil@ntms.com
Ram Patil   Ramp       ram.patil@ntms.com
Shyam Patil Shyamp     shyam.patil@ntms.com


PS C:\Users\Administrator> $Exusers

Email                 TotalSizeIteam
-----                 --------------
dinesh.patil@ntms.com 300kb
ram.patil@ntms.com    400kb
shyamm.patil@ntms.com 500kb


PS C:\Users\Administrator> foreach{$Aduser -eq $Exusers
At line:1 char:8
+ foreach{$Aduser -eq $Exusers
+        ~
Missing opening '(' after keyword 'foreach'.

At line:1 char:8
+ foreach{$Aduser -eq $Exusers
+        ~
Missing closing '}' in statement block or type definition.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : MissingOpenParenthesisAfterKeyword

PS C:\Users\Administrator> 
foreach($ADusers in $ADuser )

{foreach ($Exchangeusers in $Exusers)

    {
    if($Aduser.mail -eq $Exusers.email)
    {$Aduser.mail,$Exusers.totalsizeiteam | Export-csv C:\Demo\exchange.csv
    }

    else
    {$Aduser.mail | export-csv C:\Demo\nomatch.csv}
    
    
    }
    
    }
PS C:\Users\Administrator> $Aduser=import-csv C:\ScriptHistory\ADusers.csv
$Exusers=import-csv C:\ScriptHistory\Exchange.csv
PS C:\Users\Administrator> foreach($ADusers in $ADuser )
{

foreach ($Exchangeusers in $Exusers)

    {

    if($Adusers.mail -eq $Exchangeusers.email)
    
    {
    
    $Adusers.mail,$Exchangeusers.totalsizeiteam | Export-csv C:\Demo\exchange.csv
    
    }

    else
    
    {
    $Adusers.mail | export-csv C:\Demo\nomatch.csv
    }
    
    
    }
    
    }
PS C:\Users\Administrator> $Aduser=import-csv C:\ScriptHistory\ADusers.csv
$Exusers=import-csv C:\ScriptHistory\Exchange.csv

foreach($ADusers in $ADuser )
{

foreach ($Exchangeusers in $Exusers)

    {

    if($Adusers.mail -eq $Exchangeusers.email)
    
    {
    
    $Adusers.mail,$Exchangeusers.totalsizeiteam | out-file C:\Demo\exchange.csv
    
    }

    else
    
    {
    $Adusers.mail | out-file C:\Demo\nomatch.csv
    }
    
    
    }
    
    }
PS C:\Users\Administrator> 
foreach($ADusers in $ADuser )
{

foreach ($Exchangeusers in $Exusers)

    {

    if($Adusers.mail -eq $Exchangeusers.email)
    
    {
    
    $Adusers.mail,$Exchangeusers.totalsizeiteam | out-file C:\Demo\exchange.csv -Append
    
    }

    else
    
    {
    $Adusers.mail | out-file C:\Demo\nomatch.csv
    }
    
    
    }
    
    }
PS C:\Users\Administrator> foreach($ADusers in $ADuser )
{

foreach ($Exchangeusers in $Exusers)

    {

    if($Adusers.mail -eq $Exchangeusers.email)
    
    {
    
    $Adusers.mail,$Exchangeusers.totalsizeiteam | Export-Csv C:\Demo\exchange.csv -Append
    
    }

    else
    
    {
    $Adusers.mail | Export-Csv C:\Demo\nomatch.csv
    }
    
    
    }
    
    }
PS C:\Users\Administrator> foreach($ADusers in $ADuser )
{

foreach ($Exchangeusers in $Exusers)

    {

    if($Adusers.mail -eq $Exchangeusers.email)
    
    {
    
    $Adusers.mail,$Exchangeusers.totalsizeiteam | Export-Csv C:\Demo\exchange.csv -Append
    
    }

    else
    
    {
    $Adusers.mail | Export-Csv C:\Demo\nomatch.csv
    }
    
    
    }
    
    }
PS C:\Users\Administrator>    $Aduser=import-csv C:\ScriptHistory\ADusers.csv
$Exusers=import-csv C:\ScriptH
PS C:\Users\Administrator> TerminatingError(Import-Csv): "Could not find file 'C:\ScriptH'."
import-csv : Could not find file 'C:\ScriptH'.
At line:2 char:10
+ $Exusers=import-csv C:\ScriptH
+          ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OpenError: (:) [Import-Csv], FileNotFoundException
    + FullyQualifiedErrorId : FileOpenFailure,Microsoft.PowerShell.Commands.ImportCsvCommand
import-csv : Could not find file 'C:\ScriptH'.
At line:2 char:10
+ $Exusers=import-csv C:\ScriptH
+          ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OpenError: (:) [Import-Csv], FileNotFoundException
    + FullyQualifiedErrorId : FileOpenFailure,Microsoft.PowerShell.Commands.ImportCsvCommand

PS C:\Users\Administrator>    $Aduser=import-csv C:\ScriptHistory\ADusers.csv
$Exusers=import-csv C:\ScriptHistory\Exchange.csv
PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   
   
   
   
   
   } 
PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
   $Matched | Export-Csv C:\Demo\ex.csv
     }
   
   
   
   } 

PS C:\Users\Administrator> 
foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
   $Matched |Out-File C:\Demo\ex.csv
     }
   
   
   
   } 


PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
   $ADusers.Mail |Out-File C:\Demo\ex.csv
     }
   
   
   
   } 


PS C:\Users\Administrator> $Aduser

Name        SamAccount Mail
----        ---------- ----
Dinesh Ptil Dineshp    dinesh.patil@ntms.com
Ram Patil   Ramp       ram.patil@ntms.com
Shyam Patil Shyamp     shyam.patil@ntms.com


PS C:\Users\Administrator> $Exusers

Email                 TotalSizeIteam
-----                 --------------
dinesh.patil@ntms.com 300kb
ram.patil@ntms.com    400kb
shyamm.patil@ntms.com 500kb


PS C:\Users\Administrator> 
foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
   $ADusers.Mail |Out-File C:\Demo\ex.csv -Append
     }
   
   
   
   } 

PS C:\Users\Administrator> 
foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
   $ADusers.Mail |Out-File C:\Demo\ex.csv -Append
     }
   
   
   
   } 

PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
     $matchuser=$Exusers |Where-Object{$_.email -eq $Aduser.mail}
   $Aduser.name,$matchuser.totalsizeiteam | Out-File c:\demo\matched.csv 
     }
   else
   {
   $aduser.name | Out-File C:\Demo\notmatched.csv
   }
   
   
   } 


PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
     $matchuser=$Exusers |Where-Object{$_.email -eq $Aduser.mail}
   $Aduser.name,$matchuser.totalsizeiteam | Out-File c:\demo\matched.csv -Append
     }
   else
   {
   $aduser.name | Out-File C:\Demo\notmatched.csv -Append
   }
   
   
   } 

PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
     $matchuser=$Exusers |Where-Object{$_.email -eq $Aduser.mail}
   $Aduser.name,$matchuser.totalsizeiteam | Out-File c:\demo\matched.csv -Append
     }
   else
   {
   $adusers.name | Out-File C:\Demo\notmatched.csv -Append
   }
   
   
   } 
PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
     $matchuser=$Exusers |Where-Object{$_.email -eq $Aduser.mail}
   $Aduser.name,$matchuser.totalsizeiteam | Out-File c:\demo\matched.csv
     }
   else
   {
   $adusers.name | Out-File C:\Demo\notmatched.csv -Append
   }
   
   
   } 
PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
     $matchuser=$Exusers |Where-Object{$_.email -eq $Aduser.mail}
   $Aduser.name,$matchuser.totalsizeiteam | Out-File c:\demo\matched.csv -Append
     }
   else
   {
   $adusers.name | Out-File C:\Demo\notmatched.csv -Append
   }
   
   
   } 

PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
     $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
   $Adusers.name,$matchuser.totalsizeiteam | Out-File c:\demo\matched.csv -Append
     }
   else
   {
   $adusers.name | Out-File C:\Demo\notmatched.csv -Append
   }
   
   
   } 

PS C:\Users\Administrator>    $Aduser=import-csv C:\ScriptHistory\ADusers.csv
PS C:\Users\Administrator> $Exusers=import-csv C:\ScriptHistory\Exchange.csv
PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
     $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
   $Adusers.name,$matchuser.totalsizeiteam | Out-File c:\demo\matched.csv -Append
     }
   else
   {
   $adusers.name | Out-File C:\Demo\notmatched.csv -Append
   }
   
   
   } 

PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
     $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
   $Adusers.name,$matchuser.totalsizeiteam 
   $outputuser=[PSCustomObject]@{
      name=$Adusers.Name
      MilBoxSize=$Matchuser.totalsizeiteam

     }

     $outputuser | Export-Csv C:\Demo\matchusers.csv
Missing closing '}' in statement block or type definition.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : MissingEndCurlyBrace

PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
     $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
   $Adusers.name,$matchuser.totalsizeiteam 
   $outputuser=[PSCustomObject]@{
      name=$Adusers.Name
      MilBoxSize=$Matchuser.totalsizeiteam

     }

     $outputuser | Export-Csv C:\Demo\matchusers.csv
     }
Missing closing '}' in statement block or type definition.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : MissingEndCurlyBrace

PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
     $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
   $Adusers.name,$matchuser.totalsizeiteam 
   $outputuser=[PSCustomObject]@{
      name=$Adusers.Name
      MilBoxSize=$Matchuser.totalsizeiteam

     }

     $outputuser | Export-Csv C:\Demo\matchusers.csv
    

   #else
   #{
   #$adusers.name | export.csv C:\Demo\notmatched.csv -Append
   #}
   
   
   } 
Missing closing '}' in statement block or type definition.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : MissingEndCurlyBrace

PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
     {
     $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
   $Adusers.name,$matchuser.totalsizeiteam 
   $outputuser=[PSCustomObject]@{
      name=$Adusers.Name
      MilBoxSize=$Matchuser.totalsizeiteam
      }
     }

     $outputuser | Export-Csv C:\Demo\matchusers.csv
    

   #else
   #{
   #$adusers.name | export.csv C:\Demo\notmatched.csv -Append
   #}
   
   
   } 
Dinesh Ptil
300kb
Ram Patil
400kb
PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
    
     {
      $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
     
      $Adusers.name,$matchuser.totalsizeiteam 
      
      $outputuser=[PSCustomObject]@{
      
      name=$Adusers.Name
      
      MilBoxSize=$Matchuser.totalsizeiteam
      
      }

     }

     $outputuser | Export-Csv C:\Demo\matchusers.csv -Append
    
   } 
Dinesh Ptil
300kb
Ram Patil
400kb
PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
    
     {
      $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
     
      $Adusers.name,$matchuser.totalsizeiteam 
      
      $outputuser=[PSCustomObject]@{
      
      name=$Adusers.Name
      
      MilBoxSize=$Matchuser.totalsizeiteam
      
      }

     }

     $outputuser | Export-Csv C:\Demo\matchusers.csv -Append
    
   }
Dinesh Ptil
300kb
Ram Patil
400kb
PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
    
     {
      $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
     
      $Adusers.name,$matchuser.totalsizeiteam 
      
      $outputuser=[PSCustomObject]@{
      
      name=$Adusers.Name
      
      MilBoxSize=$Matchuser.totalsizeiteam
      
      }

     }

     $outputuser | Export-Csv C:\Demo\matchusers1.csv -Append
    
   } 
Dinesh Ptil
300kb
Ram Patil
400kb
PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
    
     {
      $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
     
      $Adusers.name,$matchuser.totalsizeiteam 
      
      $outputuser=[PSCustomObject]@{
      
      name=$Adusers.Name
      
      MilBoxSize=$Matchuser.totalsizeiteam
      
      }

     }

     $outputuser | Export-Csv C:\Demo\matchusers1.csv
    
   } 
Dinesh Ptil
300kb
Ram Patil
400kb
PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
    
     {
      $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
     
      $Adusers.name,$matchuser.totalsizeiteam 
      
      $outputuser=[PSCustomObject]@{
      
      name=$Adusers.Name
      
      MilBoxSize=$Matchuser.totalsizeiteam
      
      }

     }
     $outputuser | out-file C:\Demo\matchusers21.csv
     #$outputuser | Export-Csv C:\Demo\matchusers1.csv
    
   }
Dinesh Ptil
300kb
Ram Patil
400kb
PS C:\Users\Administrator>  $Aduser=import-csv C:\ScriptHistory\ADusers.csv
$Exusers=import-csv C:\ScriptHistory\Exchange.csv

foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
    
     {
      $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
     
      $Adusers.name,$matchuser.totalsizeiteam 
      
      $outputuser=[PSCustomObject]@{
      
      name=$Adusers.Name
      
      MilBoxSize=$Matchuser.totalsizeiteam
      
      }

     }
     $outputuser | out-file C:\Demo\matchusers21.csv
     #$outputuser | Export-Csv C:\Demo\matchusers1.csv
    
   } 
Dinesh Ptil
300kb
Ram Patil
400kb
PS C:\Users\Administrator> $Aduser=import-csv C:\ScriptHistory\ADusers.csv
$Exusers=import-csv C:\ScriptHistory\Exchange.csv

foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
    
     {
      $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
     
      $Adusers.name,$matchuser.totalsizeiteam 
      
      $outputuser=[PSCustomObject]@{
      
      name=$Adusers.Name
      
      MilBoxSize=$Matchuser.totalsizeiteam
      
      }

     }
     $outputuser | out-file C:\Demo\matchusers21.csv -Append
     #$outputuser | Export-Csv C:\Demo\matchusers1.csv
    
   } 
Dinesh Ptil
300kb
Ram Patil
400kb
PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
    
     {
      $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
     
      $Adusers.name,$matchuser.totalsizeiteam 
      
      $outputuser=[PSCustomObject]@{
      
      name=$Adusers.Name
      
      MilBoxSize=$Matchuser.totalsizeiteam
      
      }

     }
     #$outputuser | out-file C:\Demo\matchusers21.csv -Append
     $outputuser | Export-Csv C:\Demo\matchusers1.csv -Append
    
Missing closing '}' in statement block or type definition.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : MissingEndCurlyBrace

PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
    
     {
      $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
     
      
      
              $outputuser=[PSCustomObject]@{
      
              name=$Adusers.Name
      
              MilBoxSize=$Matchuser.totalsizeiteam
      
              }

         $outputuser | Export-Csv C:\Demo\matchusers1.csv -Append
     }
     #$outputuser | out-file C:\Demo\matchusers21.csv -Append
    
    
   } 
PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
    
     {
      $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
     
      
      
              $outputuser=[PSCustomObject]@{
      
              name=$Adusers.Name
      
              MilBoxSize=$Matchuser.totalsizeiteam
      
              }

         $outputuser | Export-Csv C:\Demo\matchusers10.csv -Append
     }
     #$outputuser | out-file C:\Demo\matchusers21.csv -Append
    
    
   }
PS C:\Users\Administrator> foreach($adusers in $Aduser)
   {
   
   $Matched=$Exusers | Where-Object {$_.email -eq $Adusers.Mail} |Measure-Object
   
   if($matched.Count -ge 1)
    
     {
      $matchuser=$Exusers |Where-Object{$_.email -eq $Adusers.mail}
     
     
      
      $outputuser=[PSCustomObject]@{
      
      name=$Adusers.Name
      
      MilBoxSize=$Matchuser.totalsizeiteam
      
      }
      $outputuser | Export-Csv C:\Demo\matchusers1.csv -Append

     }
     #$outputuser | out-file C:\Demo\matchusers21.csv -Append
     
    
   } 
PS C:\Users\Administrator> Get-Process

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
    242      16    24872      25228       0.59   3468   1 AnyDesk
    254      21    25696      25696      14.66   4348   1 AnyDesk
    427      31    56636     453864      69.39   4756   1 AnyDesk
    200      13     3216      17508       0.19   3420   1 ApplicationFrameHost
    326      24    36960      71936       4.08   1004   1 chrome
    318      32    58256      93740      17.95   1580   1 chrome
    436      57    99308     121460      56.75   1752   1 chrome
    193      16    11880      20096       0.08   2144   1 chrome
    175       8     1492       6576       0.00   2220   1 chrome
    247      23    24288      43516       0.69   2368   1 chrome
   1544      55    55528     123064      40.50   2500   1 chrome
    390      29    36468      70072       7.17   3080   1 chrome
    293      27    50836      86720       9.17   3800   1 chrome
    265      27    42300      79208      49.08   3880   1 chrome
    402      25    14248      30580       7.31   4192   1 chrome
    240      22    26764      47696       5.59   4216   1 chrome
    294      31    48072      74960       6.31   4412   1 chrome
    204      18    16844      29412       0.20   4676   1 chrome
    104      10     1800       8392       0.03   4748   1 chrome
    204      18    16808      29152       0.23   5072   1 chrome
    233      12     1888       4224       1.20    364   0 csrss
    293      23     2472       7336      34.19    456   1 csrss
    214      13     3604      12392       0.28   2852   0 dllhost
    358      41    46484      93184      31.38    832   1 dwm
   1682      68    34512      99768      49.78   3784   1 explorer
    135       9     1516       1460       0.03   3984   0 GoogleCrashHandler
    116       8     1476       1064       0.06   3996   0 GoogleCrashHandler64
      0       0        0          4                 0   0 Idle
    927      22     6192      14920       3.94    592   0 lsass
    138      14     4380      11500       3.64   1896   0 ManagementAgentHost
    234      12     2872      10900       0.08   4244   0 MpCmdRun
    190      13     2824       9740       1.25   3048   0 msdtc
    517      66   161612     127400     448.72   1844   0 MsMpEng
    189      12     2132      17244       0.06     76   1 notepad
    194      13     2576      17316       0.08   2612   1 notepad
   1090     112   243736     287064     454.20   2636   1 powershell_ise
    321      17     6528      21716       0.31    396   1 RuntimeBroker
    988      61    58160     107800       2.13   3540   1 SearchUI
    259      10     3320       7952       4.45    584   0 services
    724      30    20444      59504       1.30   3376   1 ShellExperienceHost
    377      15     4048      20728       0.47   1660   1 sihost
     51       2      372       1176       0.19    256   0 smss
    454      28     8752      20416       0.41   1572   0 spoolsv
    420      34    10748      16488       0.72    580   0 svchost
    628      21     5640      19268       1.67    676   0 svchost
    606      17     5368      11660       3.25    740   0 svchost
    983      38    11264      29648       2.64    756   0 svchost
    428      18     3776      11508       0.25    880   0 svchost
    284      18     4328      19520       0.20    904   1 svchost
    603      29    12340      22072       1.92    908   0 svchost
    485      19    12220      21600      10.89    968   0 svchost
    663     113    12296      26144       4.52   1056   0 svchost
   2202      56    26604      56356      39.63   1112   0 svchost
    157      11     1800       7012       0.08   1336   0 svchost
    136      12     1512       6684       0.25   1508   0 svchost
    416      21     7476      22804       1.81   1632   0 svchost
    198      13     2120       8184       0.56   1704   0 svchost
    239      17     6648      17716       1.08   1768   0 svchost
    189      15     1904       6936       1.31   3276   0 svchost
    901       0      128        136      95.13      4   0 System
    312      27     5180      15444       0.45    424   1 taskhostw
    151      12     4592      12528       0.19   1868   0 VGAuthService
     95       7     1336       6220       0.02      8   0 vmacthlp
    402      27    11888      33236      11.83    508   1 vmtoolsd
    355      24     8984      21872      15.13   1784   0 vmtoolsd
     91       8      964       4876       0.16    476   0 wininit
    179       9     1716       8776       0.17    532   1 winlogon
     48       4      600       3056       0.03   1792   0 wlms
    456      18    12972      23836      28.30    600   0 WmiPrvSE


PS C:\Users\Administrator> Get-Process | Where-Object($_.ws -gt 100)
PS C:\Users\Administrator> Get-Process | Where-Object($_.ws -ge 100)
PS C:\Users\Administrator> Get-Process | Where-Object($_.handles -ge 100)
PS C:\Users\Administrator> Get-Process | Where-Object($_.handles -ge [100])
At line:1 char:44
+ Get-Process | Where-Object($_.handles -ge [100])
+                                            ~
Missing type name after '['.

At line:1 char:42
+ Get-Process | Where-Object($_.handles -ge [100])
+                                          ~
You must provide a value expression following the '-ge' operator.

At line:1 char:43
+ Get-Process | Where-Object($_.handles -ge [100])
+                                           ~~~~~
Unexpected token '[100]' in expression or statement.

At line:1 char:42
+ Get-Process | Where-Object($_.handles -ge [100])
+                                          ~
Missing closing ')' in expression.

At line:1 char:48
+ Get-Process | Where-Object($_.handles -ge [100])
+                                                ~
Unexpected token ')' in expression or statement.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : MissingTypename

PS C:\Users\Administrator> Get-Process | Where-Object{$_.handles -ge 100}

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
    242      16    24488      25224       0.59   3468   1 AnyDesk
    254      21    25696      25696      14.84   4348   1 AnyDesk
    427      31    56940     466604      70.72   4756   1 AnyDesk
    200      13     3216      17508       0.19   3420   1 ApplicationFrameHost
    326      24    36960      71960       4.08   1004   1 chrome
    318      32    58256      93740      17.95   1580   1 chrome
    436      57    99308     121460      56.75   1752   1 chrome
    193      16    11880      20096       0.08   2144   1 chrome
    175       8     1492       6576       0.00   2220   1 chrome
    247      23    24288      43516       0.69   2368   1 chrome
   1543      55    55504     123056      40.52   2500   1 chrome
    390      29    36468      70072       7.17   3080   1 chrome
    293      27    50968      86860       9.17   3800   1 chrome
    265      27    42300      79208      49.08   3880   1 chrome
    400      25    14244      30576       7.31   4192   1 chrome
    240      22    26764      47696       5.59   4216   1 chrome
    294      31    48072      74960       6.31   4412   1 chrome
    204      18    16844      29412       0.20   4676   1 chrome
    104      10     1800       8392       0.03   4748   1 chrome
    204      18    16808      29152       0.23   5072   1 chrome
    233      12     1888       4224       1.20    364   0 csrss
    292      23     2472       7336      34.78    456   1 csrss
    214      13     3604      12392       0.28   2852   0 dllhost
    358      41    46672      93276      31.86    832   1 dwm
   1565      66    31460      97272      49.78   3784   1 explorer
    135       9     1516       1460       0.03   3984   0 GoogleCrashHandler
    116       8     1476       1064       0.06   3996   0 GoogleCrashHandler64
    929      22     6140      14892       3.94    592   0 lsass
    138      14     4380      11500       3.64   1896   0 ManagementAgentHost
    234      12     2872      10904       0.08   4244   0 MpCmdRun
    190      13     2824       9740       1.25   3048   0 msdtc
    516      66   161528     123908     448.84   1844   0 MsMpEng
    189      12     2132      17244       0.06     76   1 notepad
    189      12     2132      17252       0.08   2612   1 notepad
    898     112   243660     287652     468.88   2636   1 powershell_ise
    332      18     6740      21768       0.31    396   1 RuntimeBroker
    988      61    58160     107800       2.13   3540   1 SearchUI
    257      10     3324       7948       4.45    584   0 services
    720      30    20352      59460       1.30   3376   1 ShellExperienceHost
    377      15     4052      20724       0.47   1660   1 sihost
    454      28     8752      20416       0.41   1572   0 spoolsv
    424      34    10856      16516       0.72    580   0 svchost
    628      21     5640      19272       1.67    676   0 svchost
    599      17     5204      11568       3.25    740   0 svchost
    980      38    11108      29600       2.67    756   0 svchost
    430      18     3832      11520       0.25    880   0 svchost
    284      18     4328      19520       0.20    904   1 svchost
    603      29    12340      22072       1.92    908   0 svchost
    482      19    12140      21596      10.98    968   0 svchost
    663     113    12300      26148       4.52   1056   0 svchost
   2224      58    27060      56656      39.95   1112   0 svchost
    159      12     1992       7048       0.08   1336   0 svchost
    136      11     1456       6668       0.25   1508   0 svchost
    444      22     7152      22888       1.81   1632   0 svchost
    198      13     2120       8184       0.58   1704   0 svchost
    228      17     6488      17600       1.08   1768   0 svchost
    189      15     1904       6936       1.33   3276   0 svchost
    902       0      128        136      95.48      4   0 System
    310      26     5064      15408       0.45    424   1 taskhostw
    151      12     4592      12528       0.19   1868   0 VGAuthService
    402      27    11888      33232      11.84    508   1 vmtoolsd
    353      24     8988      21872      15.23   1784   0 vmtoolsd
    179       9     1716       8776       0.17    532   1 winlogon
    459      19    13072      24016      28.53    600   0 WmiPrvSE


PS C:\Users\Administrator> 
Get-Process | Where-Object{$_.ws -ge 100}

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
    242      16    24488      25224       0.59   3468   1 AnyDesk
    254      21    25696      25696      14.88   4348   1 AnyDesk
    427      31    56940     466604      70.77   4756   1 AnyDesk
    200      13     3216      17508       0.19   3420   1 ApplicationFrameHost
    326      24    36960      71964       4.08   1004   1 chrome
    318      32    58256      93740      17.95   1580   1 chrome
    436      57    99308     121460      56.75   1752   1 chrome
    193      16    11880      20096       0.08   2144   1 chrome
    175       8     1492       6576       0.00   2220   1 chrome
    247      23    24288      43516       0.69   2368   1 chrome
   1543      55    55504     123056      40.53   2500   1 chrome
    390      29    36468      70072       7.17   3080   1 chrome
    293      27    50968      86860       9.17   3800   1 chrome
    265      27    42300      79208      49.08   3880   1 chrome
    405      26    14280      30596       7.31   4192   1 chrome
    240      22    26764      47696       5.59   4216   1 chrome
    294      31    48072      74960       6.31   4412   1 chrome
    204      18    16844      29412       0.20   4676   1 chrome
    104      10     1800       8392       0.03   4748   1 chrome
    204      18    16808      29152       0.23   5072   1 chrome
    233      12     1888       4224       1.20    364   0 csrss
    292      23     2472       7336      34.88    456   1 csrss
    214      13     3604      12392       0.28   2852   0 dllhost
    358      41    46672      93272      31.88    832   1 dwm
   1565      66    31444      97256      49.78   3784   1 explorer
    135       9     1516       1460       0.03   3984   0 GoogleCrashHandler
    116       8     1476       1064       0.06   3996   0 GoogleCrashHandler64
      0       0        0          4                 0   0 Idle
    929      22     6140      14892       3.94    592   0 lsass
    138      14     4380      11500       3.64   1896   0 ManagementAgentHost
    234      12     2872      10904       0.08   4244   0 MpCmdRun
    190      13     2824       9740       1.25   3048   0 msdtc
    516      66   161528     123688     448.84   1844   0 MsMpEng
    189      12     2132      17244       0.06     76   1 notepad
    189      12     2132      17252       0.08   2612   1 notepad
    908     113   243080     288156     470.42   2636   1 powershell_ise
    332      18     6740      21768       0.31    396   1 RuntimeBroker
    988      61    58160     107800       2.13   3540   1 SearchUI
    257      10     3324       7948       4.45    584   0 services
    720      30    20352      59460       1.30   3376   1 ShellExperienceHost
    377      15     4052      20724       0.47   1660   1 sihost
     51       2      372       1176       0.19    256   0 smss
    454      28     8752      20416       0.41   1572   0 spoolsv
    424      34    10856      16516       0.72    580   0 svchost
    628      21     5640      19272       1.67    676   0 svchost
    599      17     5204      11568       3.25    740   0 svchost
    986      38    11216      29632       2.67    756   0 svchost
    430      18     3832      11520       0.25    880   0 svchost
    284      18     4384      19532       0.20    904   1 svchost
    603      29    12340      22072       1.92    908   0 svchost
    486      19    12228      21612      10.98    968   0 svchost
    663     113    12300      26148       4.52   1056   0 svchost
   2202      57    26788      56564      39.95   1112   0 svchost
    159      12     1992       7048       0.08   1336   0 svchost
    136      11     1456       6668       0.25   1508   0 svchost
    444      22     7152      22888       1.81   1632   0 svchost
    198      13     2120       8184       0.58   1704   0 svchost
    228      17     6488      17600       1.08   1768   0 svchost
    189      15     1904       6936       1.33   3276   0 svchost
    902       0      128        136      95.56      4   0 System
    310      26     5064      15408       0.45    424   1 taskhostw
    151      12     4592      12528       0.19   1868   0 VGAuthService
     95       7     1336       6220       0.02      8   0 vmacthlp
    402      27    11888      33232      11.86    508   1 vmtoolsd
    353      24     8988      21872      15.23   1784   0 vmtoolsd
     91       8      964       4876       0.16    476   0 wininit
    179       9     1716       8776       0.17    532   1 winlogon
     48       4      600       3056       0.03   1792   0 wlms
    459      19    13072      24016      28.53    600   0 WmiPrvSE


PS C:\Users\Administrator> Get-Process | Where-Object{$_.ws -ge 100}|Select-Object WS

       WS
       --
 25886720
 26312704
477802496
 17928192
 73695232
 95989760
124375040
 20578304
  6733824
 44560384
125988864
 71753728
 88944640
 81108992
 31309824
 48840704
 76759040
 30117888
  8593408
 29851648
  4325376
  7512064
 12689408
 95879168
 99610624
  1495040
  1089536
     4096
 15265792
 11776000
 11165696
  9973760
126754816
 17657856
 17666048
294563840
 22257664
110387200
  8138752
 60887040
 21221376
  1204224
 20905984
 16912384
 19734528
 11845632
 30343168
 11796480
 20000768
 22601728
 22130688
 26775552
 57589760
  7217152
  6828032
 23285760
  8380416
 18006016
  7102464
   139264
 15777792
 12828672
  6369280
 34029568
 22396928
  4993024
  8986624
  3129344
 24117248


PS C:\Users\Administrator> Get-Process | Where-Object{$_.ws -ge 100}|Select-Object WS | Export-Csv C:\Demo\ws.csv
PS C:\Users\Administrator> Get-Process | Where-Object{$_.ws -ge 100 KB}|Select-Object WS | Export-Csv C:\Demo\ws.csv
At line:1 char:42
+ Get-Process | Where-Object{$_.ws -ge 100 KB}|Select-Object WS | Expor ...
+                                          ~~
Unexpected token 'KB' in expression or statement.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : UnexpectedToken

PS C:\Users\Administrator> Get-Process | Where-Object{$_.ws -ge 100KB}|Select-Object WS | Export-Csv C:\Demo\ws.csv
PS C:\Users\Administrator> 
Get-Process

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
    246      16    24556      25256       0.59   3468   1 AnyDesk
    254      21    25696      25696      14.95   4348   1 AnyDesk
    427      31    57500     467332      71.41   4756   1 AnyDesk
    200      13     3216      17508       0.19   3420   1 ApplicationFrameHost
    326      24    36960      71916       4.08   1004   1 chrome
    318      32    58256      93736      17.95   1580   1 chrome
    436      57    99336     121488      56.75   1752   1 chrome
    193      16    11880      20096       0.08   2144   1 chrome
    175       8     1492       6576       0.00   2220   1 chrome
    247      23    24288      43516       0.69   2368   1 chrome
   1540      55    55468     123028      40.55   2500   1 chrome
    390      29    36468      70012       7.17   3080   1 chrome
    293      27    51312      87188       9.17   3800   1 chrome
    265      27    42300      79208      49.08   3880   1 chrome
    400      25    14216      30564       7.33   4192   1 chrome
    240      22    26764      47696       5.59   4216   1 chrome
    294      31    48072      74960       6.31   4412   1 chrome
    204      18    16844      29412       0.20   4676   1 chrome
    104      10     1800       8392       0.03   4748   1 chrome
    204      18    16808      29152       0.23   5072   1 chrome
    233      12     1888       4224       1.20    364   0 csrss
    297      23     2480       7336      35.39    456   1 csrss
    214      13     3604      12392       0.28   2852   0 dllhost
    362      42    46768      96184      32.36    832   1 dwm
   1773      79    36564     107376      51.56   3784   1 explorer
    135       9     1516       1460       0.03   3984   0 GoogleCrashHandler
    116       8     1476       1064       0.06   3996   0 GoogleCrashHandler64
      0       0        0          4                 0   0 Idle
    927      22     6152      14912       4.00    592   0 lsass
    138      14     4380      11500       3.64   1896   0 ManagementAgentHost
    234      12     2872      10904       0.08   4244   0 MpCmdRun
    190      13     2824       9740       1.25   3048   0 msdtc
    511      66   161612     123688     449.08   1844   0 MsMpEng
    189      12     2132      17244       0.06     76   1 notepad
    192      12     2312      17360       0.08   2612   1 notepad
    951     112   242432     287144     480.64   2636   1 powershell_ise
    328      18     6668      21752       0.31    396   1 RuntimeBroker
    988      61    58160     107800       2.13   3540   1 SearchUI
    259      10     3320       7956       4.52    584   0 services
    726      30    20416      59496       1.34   3376   1 ShellExperienceHost
    377      15     4048      20724       0.47   1660   1 sihost
     51       2      372       1176       0.19    256   0 smss
    454      28     8752      20416       0.41   1572   0 spoolsv
    425      34    10856      16520       0.72    580   0 svchost
    629      21     5640      19272       1.67    676   0 svchost
    604      17     5312      11632       3.30    740   0 svchost
    978      38    11108      29600       2.67    756   0 svchost
    431      18     3888      11540       0.25    880   0 svchost
    284      18     4328      19520       0.20    904   1 svchost
    603      29    12340      22072       1.92    908   0 svchost
    480      19    12520      21988      11.03    968   0 svchost
    662     110    12208      26064       4.55   1056   0 svchost
   2226      59    26944      56428      40.16   1112   0 svchost
    157      11     1800       7012       0.08   1336   0 svchost
    136      11     1456       6668       0.25   1508   0 svchost
    401      21     7008      22692       1.81   1632   0 svchost
    199      13     2120       8184       0.58   1704   0 svchost
    235      17     5788      17080       1.09   1768   0 svchost
    189      15     1904       6936       1.33   3276   0 svchost
    901       0      128        136      95.80      4   0 System
    313      26     5192      15448       0.45    424   1 taskhostw
    151      12     4592      12528       0.19   1868   0 VGAuthService
     95       7     1336       6220       0.02      8   0 vmacthlp
    402      27    11888      33236      11.94    508   1 vmtoolsd
    353      24     8984      21872      15.30   1784   0 vmtoolsd
     91       8      964       4876       0.16    476   0 wininit
    179       9     1716       8776       0.17    532   1 winlogon
     48       4      600       3056       0.03   1792   0 wlms
    456      19    12920      23876      28.70    600   0 WmiPrvSE


PS C:\Users\Administrator> t-Process | Where-Object{$_.ws -ge 100KB}|Select-Object WS,processname | Export-Csv C:\Demo\ws.csv

t-Process : The term 't-Process' is not recognized as the name of a cmdlet, function, script file, or operable program. 
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:1
+ t-Process | Where-Object{$_.ws -ge 100KB}|Select-Object WS,processnam ...
+ ~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (t-Process:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
t-Process : The term 't-Process' is not recognized as the name of a cmdlet, function, script file, or
operable program. Check the spelling of the name, or if a path was included, verify that the path is correct
and try again.
At line:1 char:1
+ t-Process | Where-Object{$_.ws -ge 100KB}|Select-Object WS,processnam ...
+ ~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (t-Process:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Administrator> Get-Process | Where-Object{$_.ws -ge 100KB}|Select-Object WS,processname

       WS ProcessName
       -- -----------
 25858048 AnyDesk
 26312704 AnyDesk
478547968 AnyDesk
 17928192 ApplicationFrameHost
 73650176 chrome
 95985664 chrome
124403712 chrome
 20578304 chrome
  6733824 chrome
 44560384 chrome
125980672 chrome
 71692288 chrome
 89284608 chrome
 81108992 chrome
 31297536 chrome
 48840704 chrome
 76759040 chrome
 30117888 chrome
  8593408 chrome
 29851648 chrome
  4325376 csrss
  7512064 csrss
 12689408 dllhost
 98492416 dwm
109973504 explorer
  1495040 GoogleCrashHandler
  1089536 GoogleCrashHandler64
 15269888 lsass
 11776000 ManagementAgentHost
 11165696 MpCmdRun
  9973760 msdtc
127778816 MsMpEng
 17657856 notepad
 17747968 notepad
300150784 powershell_ise
 22274048 RuntimeBroker
110387200 SearchUI
  8138752 services
 60874752 ShellExperienceHost
 21221376 sihost
  1204224 smss
 20905984 spoolsv
 16904192 svchost
 19734528 svchost
 11878400 svchost
 30310400 svchost
 11804672 svchost
 19988480 svchost
 22601728 svchost
 22519808 svchost
 26689536 svchost
 57524224 svchost
  7180288 svchost
  6828032 svchost
 23236608 svchost
  8380416 svchost
 17489920 svchost
  7102464 svchost
   139264 System
 15818752 taskhostw
 12828672 VGAuthService
  6369280 vmacthlp
 34037760 vmtoolsd
 22396928 vmtoolsd
  4993024 wininit
  8986624 winlogon
  3129344 wlms
 24473600 WmiPrvSE


PS C:\Users\Administrator> 
$process=Get-Process | Where-Object{$_.ws -ge 100KB}|Select-Object WS
PS C:\Users\Administrator> $process

       WS
       --
 25858048
 26312704
478547968
 17928192
 73662464
 95985664
124403712
 20578304
  6733824
 44560384
126001152
 71692288
 89436160
 81108992
 31334400
 48840704
 76759040
 30117888
  8593408
 29851648
  4329472
  7512064
 12689408
 98701312
108285952
  1544192
  1089536
 15286272
 11776000
 11165696
  9973760
126775296
 17657856
 17747968
297181184
 22274048
110387200
  8171520
 60878848
 21225472
  1204224
 20905984
 13340672
 16904192
 19734528
 11853824
 30310400
 11804672
 19988480
 22601728
 22646784
 26689536
 57733120
  7180288
  6844416
 23248896
  8380416
 17371136
  7102464
   139264
 15794176
 12828672
  6369280
 34037760
 22380544
  4993024
  8986624
  3145728
 24137728


PS C:\Users\Administrator> Get-Help Get-Process -Examples

NAME
    Get-Process

SYNOPSIS
    Gets the processes that are running on the local computer or a remote computer.


    Example 1: Get a list of all active processes on the local computer

    PS C:\>Get-Process

    This command gets a list of all active processes running on the local computer. For a definition of each
    column, see the "Additional Notes" section of the Help topic for Get-Help.
    Example 2: Get all available data about one or more processes

    PS C:\>Get-Process winword, explorer | Format-List *

    This command gets all available data about the Winword and Explorer processes on the computer. It uses
    the Name parameter to specify the processes, but it omits the optional parameter name. The pipeline
    operator (|) passes the data to the Format-List cmdlet, which displays all available properties (*) of
    the Winword and Explorer process objects.

    You can also identify the processes by their process IDs. For instance, `Get-Process -Id 664, 2060`.
    Example 3: Get all processes with a working set greater than a specified size

    PS C:\>Get-Process | Where-Object {$_.WorkingSet -gt 20000000}

    This command gets all processes that have a working set greater than 20 MB. It uses the Get-Process
    cmdlet to get all running processes. The pipeline operator (|) passes the process objects to the
    Where-Object cmdlet, which selects only the object with a value greater than 20,000,000 bytes for the
    WorkingSet property. WorkingSet is one of many properties of process objects. To see all of the
    properties, type `Get-Process | Get-Member`. By default, the values of all amount properties are in
    bytes, even though the default display lists them in kilobytes and megabytes.
    Example 4: List processes on the computer in groups based on priority

    PS C:\>$A = Get-Process PS C:\>Get-Process -InputObject $A | Format-Table -View priority

    These commands list the processes on the computer in groups based on their priority class. The first
    command gets all the processes on the computer and then stores them in the $A variable.

    The second command uses the InputObject parameter to pass the process objects that are stored in the $A
    variable to the Get-Process cmdlet. The pipeline operator passes the objects to the Format-Table cmdlet,
    which formats the processes by using the Priority view. The Priority view, and other views, are defined
    in the PS1XML format files in the Windows PowerShell home directory ($pshome).
    Example 5: Add a property to the standard Get-Process output display

    PS C:\>Get-Process Powershell -ComputerName S1, localhost | ft
    @{Label="NPM(K)";Expression={[int]($_.NPM/1024)}}, @{Label="PM(K)";Expression={[int]($_.PM/1024)}},@{Label
    ="WS(K)";Expression={[int]($_.WS/1024)}},@{Label="VM(M)";Expression={[int]($_.VM/1MB)}},
    @{Label="CPU(s)";Expression={if ($_.CPU -ne $()) { $_.CPU.ToString("N")}}}, Id, MachineName, ProcessName
    -Auto






    NPM(K) PM(K) WS(K) VM(M) CPU(s)   Id MachineName ProcessName
    ------ ----- ----- ----- ------   -- ----------- -----------
    6      23500 31340   142        1980 S1          powershell
    6      23500 31348   142        4016 S1          powershell
    27     54572 54520   576        4428 localhost   powershell

    This example provides a Format-Table (alias = ft) command that adds the MachineName property to the
    standard Get-Process output display.
    Example 6: Get version information for a process

    PS C:\>Get-Process powershell -FileVersionInfo




    ProductVersion   FileVersion      FileName
    --------------   -----------      --------
    6.1.6713.1       6.1.6713.1 (f... C:\WINDOWS\system32\WindowsPowerShell\v1.0\powershell.exe

    This command uses the FileVersionInfo parameter to get the version information for the PowerShell.exe
    file that is the main module for the PowerShell process.

    To run this command with processes that you do not own on Windows Vista and later versions of Windows,
    you must open Windows PowerShell with the Run as administrator option.
    Example 7: Get modules loaded with the specified process

    PS C:\>Get-Process SQL* -Module

    This command uses the Module parameter to get the modules that have been loaded by the process. This
    command gets the modules for the processes that have names that begin with SQL.

    To run this command on Windows Vista and later versions of Windows with processes that you do not own,
    you must start Windows PowerShell with the Run as administrator option.
    Example 8: Find the owner of a process

    PS C:\>$P = Get-WmiObject win32_process -Filter "name='powershell.exe'"
    PS C:\>$P.getowner()














    __GENUS          : 2
    __CLASS          : __PARAMETERS
    __SUPERCLASS     :
    __DYNASTY        : __PARAMETERS
    __RELPATH        :
    __PROPERTY_COUNT : 3
    __DERIVATION     : {}
    __SERVER         :
    __NAMESPACE      :
    __PATH           :
    Domain           : DOMAIN01
    ReturnValue      : 0
    User             : user01

    This command shows how to find the owner of a process. Because the System.Diagnostics.Process object that
    Get-Process returns does not have a property or method that returns the process owner, the command uses
    the Get-WmiObject cmdlet to get a Win32_Process object that represents the same process.

    The first command uses Get-WmiObject to get the PowerShell process. It saves it in the $P variable.

    The second command uses the GetOwner method to get the owner of the process in $P. The command reveals
    that the owner is Domain01\user01.
    Example 9: Use an automatic variable to identify the process hosting the current session

    PS C:\>Get-Process powershell





    Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName
    -------  ------    -----      ----- -----   ------     -- -----------
    308      26        52308      61780   567     3.18   5632 powershell
    377      26        62676      63384   575     3.88   5888 powershell PS C:\>Get-Process -Id $pid



    Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName
    -------  ------    -----      ----- -----   ------     -- -----------
    396      26        56488      57236   575     3.90   5888 powershell

    These commands show how to use the $pid automatic variable to identify the process that is hosting the
    current Windows PowerShell session. You can use this method to distinguish the host process from other
    Windows PowerShell processes that you might want to stop or close. The first command gets all of the
    Windows PowerShell processes in the current session.

    The second command gets the Windows PowerShell process that is hosting the current session.
    Example 10: Get all processes that have a main window title and display them in a table

    PS C:\>Get-Process | where {$_.mainWindowTitle} | Format-Table id, name, mainwindowtitle -autosize

    This command gets all the processes that have a main window title, and it displays them in a table with
    the process ID and the process name.

    The mainWindowTitle property is just one of many useful properties of the Process object that Get-Process
    returns. To view all of the properties, pipe the results of a Get-Process command to the Get-Member
    cmdlet (get-process | get-member).



PS C:\Users\Administrator> Get-Process | Where-Object {$_.ws -ge 100KB} | select name,@{l="ws(MB)";e={$_.ws/1MB}}

Name                       ws(MB)
----                       ------
AnyDesk               24.63671875
AnyDesk                  25.09375
AnyDesk              463.13671875
ApplicationFrameHost  17.09765625
chrome                70.29296875
chrome                 91.5390625
chrome                 118.640625
chrome                     19.625
chrome                   6.421875
chrome                42.49609375
chrome                120.1640625
chrome                68.37109375
chrome                85.69140625
chrome                 77.3515625
chrome                29.89453125
chrome                  46.578125
chrome                73.20703125
chrome                28.72265625
chrome                  8.1953125
chrome                   28.46875
csrss                       4.125
csrss                   7.0703125
dllhost                12.1015625
dwm                   92.63671875
explorer               103.171875
GoogleCrashHandler     1.42578125
GoogleCrashHandler64    1.0390625
lsass                 14.55859375
ManagementAgentHost   11.23046875
MpCmdRun               10.6484375
msdtc                  9.51171875
MsMpEng                  120.8125
notepad               16.83984375
notepad               16.92578125
powershell_ise       282.58984375
RuntimeBroker         21.19140625
SearchUI              105.2734375
services                7.7734375
ShellExperienceHost    58.0078125
sihost                20.20703125
smss                    1.1484375
spoolsv                   19.9375
svchost               16.10546875
svchost                18.8203125
svchost               11.33203125
svchost                  28.90625
svchost               11.23828125
svchost                   19.0625
svchost                21.5546875
svchost                 21.609375
svchost                25.3671875
svchost               55.16015625
svchost                6.84765625
svchost                6.51171875
svchost               22.08984375
svchost                 7.9921875
svchost                      16.5
svchost                 6.7734375
System                  0.1328125
taskhostw                 15.0625
VGAuthService           12.234375
vmacthlp               6.07421875
vmtoolsd               32.4453125
vmtoolsd              21.37109375
wininit                4.76171875
winlogon                8.5703125
wlms                     2.984375
WmiPrvSE              23.29296875


PS C:\Users\Administrator> Write-Host "Please provide input"
Please provide input
PS C:\Users\Administrator> Write-Host "Please provide input"
Read-Host ""
Please provide input
PS C:\Users\Administrator> TerminatingError(Read-Host): "name cannot be null or empty."
Read-Host : name cannot be null or empty.
At line:2 char:1
+ Read-Host ""
+ ~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Read-Host], PSArgumentException
    + FullyQualifiedErrorId : Argument,Microsoft.PowerShell.Commands.ReadHostCommand
Read-Host : name cannot be null or empty.
At line:2 char:1
+ Read-Host ""
+ ~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Read-Host], PSArgumentException
    + FullyQualifiedErrorId : Argument,Microsoft.PowerShell.Commands.ReadHostCommand

PS C:\Users\Administrator> Write-Host "Please provide input"
Please provide input
PS C:\Users\Administrator> Get-Help Read-Host -Examples

NAME
    Read-Host

SYNOPSIS
    Reads a line of input from the console.


    Example 1: Save console input to a variable

    PS C:\>$Age = Read-Host "Please enter your age"

    This command displays the string "Please enter your age:" as a prompt. When a value is entered and the
    Enter key is pressed, the value is stored in the $Age variable.
    Example 2: Save console input as a secure string

    PS C:\>$pwd_secure_string = Read-Host "Enter a Password" -AsSecureString

    This command displays the string "Enter a Password:" as a prompt. As a value is being entered, asterisks
    (*) appear on the console in place of the input. When the Enter key is pressed, the value is stored as a
    SecureString object in the $pwd_secure_string variable.



PS C:\Users\Administrator> 
$mytext=Read-Host "please provide input"
PS C:\Users\Administrator> $mytext
abhi
PS C:\Users\Administrator> $mytext=Read-Host "please provide input"
for ($mytext.Length;$i-ge 1; $i--)
{
$reversetext=$mytext[$i]
$reversetext
}
PS C:\Users\Administrator> $text="dinesh"
for ($text.Length;$i-ge 1; $i--)
{
$reversetext=$text[$i]
$reversetext
}
PS C:\Users\Administrator> $reversetext
PS C:\Users\Administrator> $text="dinesh"
for ($i=$text.Length;$i-ge 1; $i--)
{
$reversetext=$text[$i]
$reversetext
}

h
s
e
n
i
PS C:\Users\Administrator> $text="dinesh"
for ($i=$text.Length;$i-ge 0; $i--)
{
$reversetext=$text[$i]
$reversetext
}

h
s
e
n
i
d
PS C:\Users\Administrator> $text="dinesh"
for ($i=$text.Length;$i-ge 0; $i--)
{
$reversetext=$revertext+$text[$i]
$reversetext
}
h
s
e
n
i
d
PS C:\Users\Administrator> $text="dinesh"
for ($i=$text.Length;$i-ge 0; $i--)
{
$reversetext=$revertext+$text[$i]
$reversetext
}

h
s
e
n
i
d
PS C:\Users\Administrator> 
$text="dinesh"
for ($i=$text.Length-1;$i-ge 0; $i--)
{
$reversetext=$revertext+$text[$i]
$reversetext
}

h
s
e
n
i
d
PS C:\Users\Administrator> $text="dinesh"
$reversetext=""
for ($i=$text.Length;$i-ge 0; $i--)
{
$reversetext=$revertext+$text[$i]
$reversetext
}

h
s
e
n
i
d
PS C:\Users\Administrator> $text="dinesh"
$reversetext=""
for ($i=$text.Length;$i-ge 0; $i--)
{
$reversetext=$revertext+$text[$i]
}
PS C:\Users\Administrator> t
t : The term 't' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the 
spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:1
+ t
+ ~
    + CategoryInfo          : ObjectNotFound: (t:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
t : The term 't' is not recognized as the name of a cmdlet, function, script file, or operable program. Check
the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:1
+ t
+ ~
    + CategoryInfo          : ObjectNotFound: (t:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Administrator> $text="dinesh"
$reversetext=""
for ($i=$text.Length;$i-ge 0; $i--)
{
$reversetext=$revertext+$text[$i]
}
PS C:\Users\Administrator> $reversetext
d
PS C:\Users\Administrator> $text="dinesh"
#$reversetext=""
for ($i=$text.Length;$i-ge 0; $i--)
{
$reversetext=$revertext+$text[$i]
}
PS C:\Users\Administrator> $reversetext
d
PS C:\Users\Administrator> 
$text="dinesh"
#$reversetext=""
for ($i=$text.Length;$i-ge 0; $i--)
{
$reversetext=$revertext+$text[$i]
}

$reversetext

d
PS C:\Users\Administrator> 
$text="dinesh"
$reversetext=""
for ($i=$text.Length;$i-ge 0; $i--)
{
$reversetext=$revertext+$text[$i]
}

$reversetext

d
PS C:\Users\Administrator> $text="dinesh"
$reversetext=""
for ($i=$text.Length;$i-ge 0; $i--)
{
$reversetext=$revertext+$text[$i]
$reversetext
}

h
s
e
n
i
d
PS C:\Users\Administrator> $text="dinesh"
$reversetext=""
for ($i=$text.Length;$i-ge 0; $i--)
{
$reversetext=$revertext+$text[$i]

}

$reversetext
d
**********************
Windows PowerShell transcript end
End time: 20190824161541
**********************
